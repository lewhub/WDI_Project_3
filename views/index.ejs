<div class="navbar-fixed">
  <ul id="dropdown1" class="dropdown-content">
    <li><a href="/profile">Profile</a></li>
    <li class="divider"></li>
    <li><a id="edit-profile" href="/profile">Settings</a></li>
    <li class="divider"></li>
    <li><a href="/map">Map</a></li>
    <li class="divider"></li>
    <li><a href="/logout">Logout</a></li>
    <li class="divider"></li>
  </ul>
    <nav>
    <div class="nav-wrapper">
      <a href="#" class="brand-logo">SpotBuds Logo</a>
      <ul id="nav-mobile" class="right hide-on-med-and-down">
        <li><a class="dropdown-button" href="#!" data-activates="dropdown1"><%= user.local.name || user.facebook.name %><i class="material-icons right"></i></a></li>
      </ul>
    </div>
  </nav>
</div>

<!-- Modal -->
<div id="modal1" class="modal">
  <div class="modal-content">
    <h4>Modal Header</h4>
    <p>A bunch of text</p>
  </div>
  <div class="modal-footer">
    <a href="#!" id="close-button" class=" modal-action modal-close waves-effect waves-green btn-flat">Close</a>
  </div>
</div>
<input id="search-box" class="search-box-class" type="text" placeholder="Search for a place">
<div id="map"></div>



<script>



function showUser(){
  console.log(user.local.username)
}
  // This example requires the Places library. Include the libraries=places
  // parameter when you first load the API. For example:
  // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

  function initMap() {

    // map for santa monica
    var santaMonica = {lat: 34.024212, lng: -118.496475}
    var spotBudEvents = ['ChIJOymuApikwoARHpp1o3BWzlY','ChIJx92--cikwoARw22QhUijGmc','ChIJZcs3zNCkwoARjU42dRrVZfM','ChIJY9TAMwO7woARfm6h0NW_ycI','ChIJIXI2IdCkwoAR1jqp9T02htA','ChIJjYpkBmmjwoAR2Hft4wzsld0','ChIJGSZtRhO7woAR3OAfz9Ub3_U','ChIJ8z1Qsd26woAR_kIW46rb_8o']
    var searchMarkers = []
    var allMarkers = []


    var map = new google.maps.Map(document.getElementById('map'), {
      center: {lat: -33.8688, lng: 151.2195},
      zoom: 13
    });



    if (navigator.geolocation){
      navigator.geolocation.getCurrentPosition(function(position){
        var currentPosition = { lat: position.coords.latitude, lng: position.coords.longitude}
        infoWindow.setPosition(currentPosition)
        infoWindow.setContent('This is where you are')
        infoWindow.open(map)
        map.setCenter(currentPosition)
      })
    }



    var infoWindow = new google.maps.InfoWindow()

    var service = new google.maps.places.PlacesService(map);

    // creates search box, puts the input into the map ui and sets up auto complete
    var inputBox = document.getElementById('search-box')
    var searchBoxGoogle = new google.maps.places.SearchBox(inputBox)
    map.controls[google.maps.ControlPosition.TOP_LEFT].push(inputBox)
    // makes autocomplete suggestions specific to the users location (map)
    map.addListener('bounds_changed', function() {
      searchBoxGoogle.setBounds(map.getBounds());
    });

    searchBoxGoogle.addListener('places_changed', function(){
      if (searchMarkers.length > 0) {
        searchMarkers.forEach(function(location){
          location.setMap(null)
          console.log('this is the search markers array', searchMarkers)
          searchMarkers = []
          console.log(searchMarkers)
        })
      }

      var places = searchBoxGoogle.getPlaces()
      if (places.length === 0){
      //  console.log('no places match your search of', $(inputBox).val())
        return
      }
      places.forEach(function(place){
        //console.log(place.name)
        if (spotBudEvents.includes(place.place_id)) {
          console.log('already on map', place.name)
        } else {
          var marker = new google.maps.Marker({
            map: map,
            title: place.name,
            position: place.geometry.location
          })
          searchMarkers.push(marker)
          google.maps.event.addListener(marker, 'click', function(){
            infoWindow.setContent(place.name + '<br>' + place.formatted_address + '<br>' + place.id + '<br>' + '<button id="add-event">Add an event</button>')
            infoWindow.open(map, this)
            $('#add-event').on('click', function(){
              console.log(place.place_id)
              $.ajax({
                method: 'post',
                url: '/spots',
                data: JSON.stringify({spot_location: place.place_id.toString()}),
                contentType: 'application/json'
              })
              .done(function(new_spot){
                console.log(new_spot, 'this is the new spot')
                service.getDetails({
                  placeId: new_spot.spot.spot_location
                }, function(place, status){
                  if (status === google.maps.places.PlacesServiceStatus.OK) {
                    var marker = new google.maps.Marker({
                      map: map,
                      position: place.geometry.location,
                      icon: 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'
                    })
                    google.maps.event.addListener(marker, 'click', function(){
                      infoWindow.setContent(place.name + '<br>' + place.formatted_address + '<br>' + '<button id="add-event-hardcoded">Add Event</button>')
                      infoWindow.open(map, this)
                      $('#add-event-hardcoded').on('click', function(){
                        console.log('clicked!!!')
                        $('#modal1').openModal()
                      })
                    })
                  }
                })
              })
              $('#modal1').append('<input id="in" type="text">')

              $('#modal1').openModal()
              $('#close-button').on('click', function(){
                infoWindow.setContent($('#in').val())

              })
              console.log('clicked!!!')

              console.log(searchMarkers)
              searchMarkers.splice(searchMarkers.indexOf(marker), 1)
              marker.setIcon('http://maps.google.com/mapfiles/ms/icons/green-dot.png')
              console.log('removing from ui')
              console.log(searchMarkers)
              // console.log(spotBudEvents.length)
            })

          })
        }

      })
      //console.log(places.length, 'places found with search input', $(inputBox).val())

    })

    // function addMarker(location){
    //   console.log(location)
    //
    //   var marker = new google.maps.Marker({
    //     position: location,
    //     map: map
    //   })
    //   console.log(marker.placeId)
    //   spotBudEvents.push(marker)
    //
    //   console.log(spotBudEvents)
    // }
    //   map.addListener('click', function(event){
    //     addMarker(event.latLng)
    //   })




    // Nearby Search Example
    // service.nearbySearch({
    //   location: santaMonica,
    //   radius: 1000,
    //   keyword: 'Vons'
    //
    // }, function(results, status){
    //   // console.log(results.length)
    //   if (status === google.maps.places.PlacesServiceStatus.OK) {
    //     results.forEach(function(el){
    //       var placeLocation = el.geometry.location
    //       var newMarker = new google.maps.Marker({
    //         map: map,
    //         position: el.geometry.location
    //       })
    //       google.maps.event.addListener(newMarker, 'click', function(){
    //         infoWindow.setContent(el.name)
    //         infoWindow.open(map, this)
    //       })
    //     })
    //   }
    // })

    // marker colors - blue : http://maps.google.com/mapfiles/ms/icons/blue-dot.png
    // green - http://maps.google.com/mapfiles/ms/icons/green-dot.png




    $.ajax({
      method: 'get',
      url: '/spots'
    })
    .done(function(spots){
      console.log('dropping pins!!!!!!!')
      if (allMarkers.length > 0) {
        allMarkers.forEach(function(location){
          location.setMap(null)
          allMarkers = []
        })
      }
      console.log(spots)

      spots.forEach(function placeMarkers(spot){
        service.getDetails({
          placeId: spot.spot_location
        }, function(place, status){
          if (status === google.maps.places.PlacesServiceStatus.OK) {
            var marker = new google.maps.Marker({
              map: map,
              position: place.geometry.location,
              icon: 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'
            })
            allMarkers.push(marker)
            google.maps.event.addListener(marker, 'click', function(){
              infoWindow.setContent(place.name + '<br>' + place.formatted_address + '<br>' + '<button id="add-event-hardcoded">Add Event</button>')
              infoWindow.open(map, this)
              $('#add-event-hardcoded').on('click', function(){
                console.log('clicked!!!')
                $('#modal1').openModal()
              })
            })
          } else {
            // using recursion to display all markers to the screen
            setTimeout(function(){ placeMarkers(spot)}, 500)
            console.log(status, 'not working nooooo')
          }
        })
      })
    })

    function fill_map(data){


    }





    service.getDetails({
      placeId: 'ChIJGQCRws6kwoARq_Uj_7UKF7Q'
    }, function(place, status) {
      if (status === google.maps.places.PlacesServiceStatus.OK) {
        var marker = new google.maps.Marker({
          map: map,
          position: place.geometry.location
        })
        google.maps.event.addListener(marker, 'click', function() {
          // Here were manipulating the place object to diplay the place name provided by google. We are also adding a list to the message box
          infoWindow.setContent('<div class="info-window-box"><strong>' + place.name + '</strong><br>' +
            'Place ID: ' + place.name + '<br>' + place.formatted_address + '</div>' + '<ul><li id="field-hockey-details">Field Hockey Fun</li><li>Volleyball Game</li><li>Squats at Muscle Beach</li><li>Come play sand flag football by Jamie</li><li>Workout Swimming</li><li>Workout Swimming</li><li>Workout Swimming</li><li>Workout Swimming</li><li>Workout Swimming</li><li>Workout Swimming</li><li>Workout Swimming</li><li>Workout Swimming</li><li>Workout Swimming</li><li>Workout Swimming</li><li>Workout Swimming</li><li>Workout Swimming</li><li>Workout Swimming</li><li>Workout Swimming</li><li>Workout Swimming</li><li>Workout Swimming</li><li>Workout Swimming</li><li>Workout Swimming</li><li>Workout Swimming</li></ul>');
          infoWindow.open(map, this);
          // Here we are adding css to the info window that google provides where we want to show events to change the height of the info box and make it scrollable. We want to show five events (lis) before scrolling
          $('.gm-style-iw').css({'max-height': '250px'})
          var my_li = $('#field-hockey-details');
          var modal = $('#modal1')
          my_li.on('click', function(){
            console.log('my li clicked!!!', my_li)
            modal.openModal()
            // to close a modal
            //   $('#modal1').closeModal()
          })
        });
      }
    });
  }

</script>
<script async defer
src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCiziPo9qfv5AIDmkB4JREt9PyDBgphUzY&libraries=places&callback=initMap">
</script>
<script>
 $('#layout-nav').css({'display': 'none'})
</script>
